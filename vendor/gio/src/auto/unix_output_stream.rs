// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use gio_sys;
use glib::object::IsA;
use glib::translate::*;
use std::fmt;
use OutputStream;
use PollableOutputStream;

glib_wrapper! {
    pub struct UnixOutputStream(Object<gio_sys::GUnixOutputStream, gio_sys::GUnixOutputStreamClass, UnixOutputStreamClass>) @extends OutputStream, @implements PollableOutputStream;

    match fn {
        get_type => || gio_sys::g_unix_output_stream_get_type(),
    }
}

pub const NONE_UNIX_OUTPUT_STREAM: Option<&UnixOutputStream> = None;

pub trait UnixOutputStreamExt: 'static {
    fn get_close_fd(&self) -> bool;
}

impl<O: IsA<UnixOutputStream>> UnixOutputStreamExt for O {
    fn get_close_fd(&self) -> bool {
        unsafe {
            from_glib(gio_sys::g_unix_output_stream_get_close_fd(
                self.as_ref().to_glib_none().0,
            ))
        }
    }
}

impl fmt::Display for UnixOutputStream {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "UnixOutputStream")
    }
}
