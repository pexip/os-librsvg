// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use gio_sys;
use std::ffi::CStr;

#[cfg(any(feature = "v2_58", feature = "dox"))]
lazy_static! {
    pub static ref DRIVE_IDENTIFIER_KIND_UNIX_DEVICE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_DRIVE_IDENTIFIER_KIND_UNIX_DEVICE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_ACCESS_CAN_DELETE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_ACCESS_CAN_READ: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_ACCESS_CAN_READ)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_ACCESS_CAN_RENAME: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_ACCESS_CAN_TRASH: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_ACCESS_CAN_WRITE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_DOS_IS_ARCHIVE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE)
            .to_str()
            .unwrap()
    };
}
#[cfg(any(feature = "v2_60", feature = "dox"))]
lazy_static! {
    pub static ref FILE_ATTRIBUTE_DOS_IS_MOUNTPOINT: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_DOS_IS_MOUNTPOINT)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_DOS_IS_SYSTEM: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_DOS_IS_SYSTEM)
            .to_str()
            .unwrap()
    };
}
#[cfg(any(feature = "v2_60", feature = "dox"))]
lazy_static! {
    pub static ref FILE_ATTRIBUTE_DOS_REPARSE_POINT_TAG: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_DOS_REPARSE_POINT_TAG)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_ETAG_VALUE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_ETAG_VALUE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_FILESYSTEM_FREE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_FILESYSTEM_FREE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_FILESYSTEM_READONLY: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_FILESYSTEM_READONLY)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_FILESYSTEM_REMOTE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_FILESYSTEM_REMOTE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_FILESYSTEM_SIZE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_FILESYSTEM_SIZE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_FILESYSTEM_TYPE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_FILESYSTEM_TYPE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_FILESYSTEM_USED: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_FILESYSTEM_USED)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_GVFS_BACKEND: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_GVFS_BACKEND)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_ID_FILE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_ID_FILE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_ID_FILESYSTEM: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_ID_FILESYSTEM)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_MOUNTABLE_CAN_START: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_OWNER_GROUP: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_OWNER_GROUP)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_OWNER_USER: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_OWNER_USER)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_OWNER_USER_REAL: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_OWNER_USER_REAL)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_PREVIEW_ICON: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_PREVIEW_ICON)
            .to_str()
            .unwrap()
    };
}
#[cfg(any(feature = "v2_52", feature = "dox"))]
lazy_static! {
    pub static ref FILE_ATTRIBUTE_RECENT_MODIFIED: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_RECENT_MODIFIED)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_SELINUX_CONTEXT: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_SELINUX_CONTEXT)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_COPY_NAME: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_COPY_NAME)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_DESCRIPTION: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_EDIT_NAME: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_ICON: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_ICON)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_IS_BACKUP: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_IS_HIDDEN: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_IS_SYMLINK: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL)
            .to_str()
            .unwrap()
    };
}
#[cfg(any(feature = "v2_46", feature = "dox"))]
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_IS_VOLATILE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_NAME: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_NAME)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_SIZE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_SIZE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_SORT_ORDER: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_TARGET_URI: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_TARGET_URI)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_STANDARD_TYPE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_STANDARD_TYPE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_THUMBNAILING_FAILED: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_THUMBNAILING_FAILED)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_THUMBNAIL_IS_VALID: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_THUMBNAIL_PATH: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_THUMBNAIL_PATH)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_TIME_ACCESS: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_TIME_ACCESS)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_TIME_ACCESS_USEC: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_TIME_ACCESS_USEC)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_TIME_CHANGED: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_TIME_CHANGED)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_TIME_CHANGED_USEC: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_TIME_CHANGED_USEC)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_TIME_CREATED: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_TIME_CREATED)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_TIME_CREATED_USEC: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_TIME_CREATED_USEC)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_TIME_MODIFIED: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_TIME_MODIFIED)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_TIME_MODIFIED_USEC: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_TRASH_DELETION_DATE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_TRASH_DELETION_DATE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_TRASH_ITEM_COUNT: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_TRASH_ORIG_PATH: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_TRASH_ORIG_PATH)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_UNIX_BLOCKS: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_UNIX_BLOCKS)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_UNIX_BLOCK_SIZE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_UNIX_DEVICE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_UNIX_DEVICE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_UNIX_GID: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_UNIX_GID)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_UNIX_INODE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_UNIX_INODE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_UNIX_MODE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_UNIX_MODE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_UNIX_NLINK: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_UNIX_NLINK)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_UNIX_RDEV: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_UNIX_RDEV)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref FILE_ATTRIBUTE_UNIX_UID: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_FILE_ATTRIBUTE_UNIX_UID)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref MENU_ATTRIBUTE_ACTION: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_MENU_ATTRIBUTE_ACTION)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref MENU_ATTRIBUTE_ACTION_NAMESPACE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_MENU_ATTRIBUTE_ACTION_NAMESPACE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref MENU_ATTRIBUTE_ICON: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_MENU_ATTRIBUTE_ICON)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref MENU_ATTRIBUTE_LABEL: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_MENU_ATTRIBUTE_LABEL)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref MENU_ATTRIBUTE_TARGET: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_MENU_ATTRIBUTE_TARGET)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref MENU_LINK_SECTION: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_MENU_LINK_SECTION)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref MENU_LINK_SUBMENU: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_MENU_LINK_SUBMENU)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref NETWORK_MONITOR_EXTENSION_POINT_NAME: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_NETWORK_MONITOR_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref PROXY_EXTENSION_POINT_NAME: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_PROXY_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref PROXY_RESOLVER_EXTENSION_POINT_NAME: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_PROXY_RESOLVER_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref SETTINGS_BACKEND_EXTENSION_POINT_NAME: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_SETTINGS_BACKEND_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref TLS_BACKEND_EXTENSION_POINT_NAME: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_TLS_BACKEND_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref VFS_EXTENSION_POINT_NAME: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_VFS_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref VOLUME_IDENTIFIER_KIND_CLASS: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_VOLUME_IDENTIFIER_KIND_CLASS)
            .to_str()
            .unwrap()
    };
}
#[cfg_attr(feature = "v2_58", deprecated)]
lazy_static! {
    pub static ref VOLUME_IDENTIFIER_KIND_HAL_UDI: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_VOLUME_IDENTIFIER_KIND_HAL_UDI)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref VOLUME_IDENTIFIER_KIND_LABEL: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_VOLUME_IDENTIFIER_KIND_LABEL)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref VOLUME_IDENTIFIER_KIND_NFS_MOUNT: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_VOLUME_IDENTIFIER_KIND_NFS_MOUNT)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref VOLUME_IDENTIFIER_KIND_UNIX_DEVICE: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_VOLUME_IDENTIFIER_KIND_UNIX_DEVICE)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref VOLUME_IDENTIFIER_KIND_UUID: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_VOLUME_IDENTIFIER_KIND_UUID)
            .to_str()
            .unwrap()
    };
}
lazy_static! {
    pub static ref VOLUME_MONITOR_EXTENSION_POINT_NAME: &'static str = unsafe {
        CStr::from_ptr(gio_sys::G_VOLUME_MONITOR_EXTENSION_POINT_NAME)
            .to_str()
            .unwrap()
    };
}
